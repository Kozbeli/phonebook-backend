{"version":3,"sources":["components/filter.js","components/personForm.js","service/persons.js","components/Notification.js","components/Persons.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","Form","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","then","response","data","newObject","post","person","id","put","delete","console","log","Notification","message","errorType","className","Persons","persons","remove","rows","map","name","number","onClick","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","setErrorType","useEffect","personService","initialPersons","personsToShow","length","toLowerCase","includes","notificate","setTimeout","event","target","preventDefault","personObject","some","window","confirm","find","p","changedPerson","returnedPerson","catch","error","concat","index","indexOf","copy","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0967d8a9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter,handleFilterChange}) => {\n    return (\n      <div>\n          filter shown with: <input\n            value={filter}\n            onChange={handleFilterChange}\n          />\n        </div>\n    )\n  }\n\n  export default Filter","import React from 'react'\n\nconst Form = (props) => {\n    return (\n        <form onSubmit={props.addPerson}>\n            <div>\n                name: <input\n                    value={props.newName}\n                    onChange={props.handleNameChange}\n                />\n            </div>\n            <div>\n                number: <input\n                    value={props.newNumber}\n                    onChange={props.handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form","import axios from 'axios'\n\nconst baseUrl = 'https://whispering-springs-76267.herokuapp.com/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst update = (person, id) => {\n  const request = axios.put(`${baseUrl}/${id}`, person)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst remove = (person) => {\n  const request = axios.delete(`${baseUrl}/${person.id}`, { person })\n  return request.then(response => {\n    console.log(`after removing ${person.id} response data returns: ${response}`)\n    return response.data\n  })\n\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst Notification = ({ message, errorType }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={errorType}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Persons = ({ persons, remove }) => {\n  const rows = persons.filter(person => person.id)\n    .map((person) => {\n      console.log(`Person_id: ${person.id} ${person.name}`)\n      return (\n        <li key={person.id}>\n          {person.name} {person.number}\n          <button onClick={() => remove(person.id)}>delete</button>\n        </li>\n      )\n    })\n  return (\n    <ul>{rows}</ul>\n  )\n}\n\nexport default Persons","import React, { useState, useEffect } from 'react'\nimport Filter from './components/filter'\nimport PersonForm from './components/personForm'\nimport personService from './service/persons'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [errorType, setErrorType] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const deletePerson = id => {\n    const person = persons.find(p => p.id === id)\n    const remove = window.confirm(`Delete ${person.name}?`)\n    if (remove) {\n      personService\n        .remove(person)\n        .then(returnedPerson => {\n          const index = persons.indexOf(person)\n          const copy = [...persons]\n          copy.splice(index, 1);\n          setPersons(copy)\n          notificate(`Removed ${person.name}`, `green`)\n        })\n        .catch(error => {\n          notificate(`Information of ${person.name} has already been removed from server`, `red`)\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const exists = persons.some(person => person.name === newName)\n\n    if (exists) {\n\n      const update = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      if (update) {\n        const person = persons.find(p => p.name === newName)\n        const changedPerson = { ...person, number: newNumber }\n        const { id } = person\n\n        personService\n          .update(changedPerson, id)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => (p.id !== id ? p : returnedPerson)))\n            notificate(`Updated ${returnedPerson.name}`, `green`)\n          })\n          .catch(error => {\n            notificate(`Information of ${person.name} has already been removed from server`, `red`)\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          notificate(`Added ${returnedPerson.name}`, `green`)\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const personsToShow = (filter.length === 0)\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  const notificate = (message, errorType) => {\n    setErrorMessage(message)\n    setErrorType(errorType)\n    setTimeout(() => {\n      setErrorMessage(null)\n      setErrorType(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={errorMessage}\n        errorType={errorType}\n      />\n      <Filter\n        filter={filter}\n        handleFilterChange={handleFilterChange}\n      />\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={personsToShow}\n        remove={deletePerson}\n      />\n    </div>\n  )\n}\n\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}